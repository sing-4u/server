generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id           String   @id @default(uuid()) @db.Uuid
  provider     String
  providerId   String?
  password     String?
  email        String   @unique
  name         String
  refreshToken String?
  createdAt    DateTime @default(now())
  image        String?
  isOpened     Boolean  @default(false)

  EmailCode EmailCode[]
  SongList  SongList[]

  @@unique([provider, providerId])
  @@index([provider, providerId])
  @@index([isOpened])
}

model EmailCode {
  email     String   @id
  code      String
  createdAt DateTime @default(now())

  user User @relation(fields: [email], references: [email], onDelete: Cascade)
}

model SongList {
  id        String    @id @default(uuid()) @db.Uuid
  startDate DateTime  @default(now())
  endDate   DateTime?
  userId    String    @db.Uuid

  user  User   @relation(fields: [userId], references: [id], onDelete: Cascade)
  songs Song[]

  @@index([userId])
}

model Song {
  email      String
  artist     String
  title      String
  songListId String @db.Uuid

  songList SongList @relation(fields: [songListId], references: [id], onDelete: Cascade)

  @@id([songListId, email])
}

model Admin {
  id         String    @id
  name       String
  email      String
  password   String
  permission String
  createdAt  DateTime  @default(now())
  lastLogin  DateTime?
}
